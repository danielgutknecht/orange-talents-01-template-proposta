# DATABASE CONFIG
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5433}/${DB_NAME:propostas}
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=${DB_USERNAME:propostas}
spring.datasource.password=${DB_PASSWORD:password}
# JPA AND HIBERNATE CONFIG
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

#FEIGN CLIENTS
proposal.url=${PROPOSAL_API_URL:http://localhost:9999}
card.url=${CARD_API_URL:http://localhost:8888}

#Actuator - http://localhost:8080/actuator
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=info,health,prometheus, metrics
management.endpoints.prometheus.enabled=true

management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:proposal}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}

#Configuracao para acessar keycloak
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWK_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}

# Jaeger - Habilita ou nao
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
# Jaeger - Nome do servico
opentracing.jaeger.service-name=${spring.application.name:proposal}
# Jaeger - Endereco para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
# Jaeger - Tipo de amostragem (probabilistico) e sua configuracao (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}
# True para enviar 100%
opentracing.jaeger.const-sampler.decision=${JAEGER_SAMPLER:true}
